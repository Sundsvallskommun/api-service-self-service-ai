openapi: 3.0.1
info:
  title: self-service-ai
  contact: { }
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: "1.0"
servers:
  - url: http://localhost:57363
    description: Generated server url
tags:
  - name: Assistant session resources
    description: "Resources for creating, interacting with and removing assistant sessions"
paths:
  /{municipalityId}/session:
    post:
      tags:
        - Assistant session resources
      summary: Create assistant session
      description: Resource for creating a new session towards the assistant
      operationId: createAssistantSession
      parameters:
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionRequest"
        required: true
      responses:
        "201":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionResponse"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/session/{id}:
    get:
      tags:
        - Assistant session resources
      summary: Interact with assistant
      description: Resource for interacting with the assistant by asking a question
      operationId: askAssistant
      parameters:
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: id
          in: path
          description: Session id
          required: true
          schema:
            type: string
          example: f5211067-b3c7-4394-b84a-aa3fa65507e3
        - name: question
          in: query
          description: The question to ask
          required: true
          schema:
            minLength: 1
            type: string
          example: "What is the answer to the ultimate question of life, the universe\
          \ and everything?"
      responses:
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestionResponse"
        "204":
          description: If no answer could be retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestionResponse"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    delete:
      tags:
        - Assistant session resources
      summary: Remove assistant session
      description: Resource for removing the assistant session matching sent in id
      operationId: deleteAssistantSession
      parameters:
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: id
          in: path
          description: Session id
          required: true
          schema:
            type: string
          example: f5211067-b3c7-4394-b84a-aa3fa65507e3
      responses:
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "204":
          description: Successful Operation
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/session/{id}/ready:
    get:
      tags:
        - Assistant session resources
      summary: Ask if assistant is ready for interaction
      description: Resource for checking if the assistant is ready to answer questions
        (i.e. has been fully initialized with data)
      operationId: isAssistantReady
      parameters:
        - name: municipalityId
          in: path
          description: Municipality id
          required: true
          schema:
            type: string
          example: 2281
        - name: id
          in: path
          description: Session id
          required: true
          schema:
            type: string
          example: f5211067-b3c7-4394-b84a-aa3fa65507e3
      responses:
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: boolean
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /api-docs:
    get:
      tags:
        - API
      summary: OpenAPI
      operationId: getApiDocs
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: string
      x-auth-type: None
      x-throttling-tier: Unlimited
      x-wso2-mutual-ssl: Optional
components:
  schemas:
    SessionRequest:
      required:
        - customerEngagementOrgIds
        - partyId
      type: object
      properties:
        partyId:
          type: string
          description: The id of the party to use when retrieving the information
            that will form the basis of the assistant's answers
          example: 5a6c3e4e-c320-4006-b448-1fd4121df828
        customerEngagementOrgIds:
          maxItems: 2147483647
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: string
            description: Organization id specifying the counterparty to fetch customer's
              engagements for
            example: "5566123456"
      description: Model for session initiation request
    Problem:
      type: object
      properties:
        instance:
          type: string
          format: uri
        type:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        title:
          type: string
        detail:
          type: string
        status:
          $ref: "#/components/schemas/StatusType"
    StatusType:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        reasonPhrase:
          type: string
    ConstraintViolationProblem:
      type: object
      properties:
        cause:
          $ref: "#/components/schemas/ThrowableProblem"
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              className:
                type: string
              nativeMethod:
                type: boolean
        type:
          type: string
          format: uri
        status:
          $ref: "#/components/schemas/StatusType"
        violations:
          type: array
          items:
            $ref: "#/components/schemas/Violation"
        title:
          type: string
        message:
          type: string
        instance:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        detail:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    ThrowableProblem:
      type: object
      properties:
        cause:
          $ref: "#/components/schemas/ThrowableProblem"
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              className:
                type: string
              nativeMethod:
                type: boolean
        message:
          type: string
        instance:
          type: string
          format: uri
        type:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        title:
          type: string
        detail:
          type: string
        status:
          $ref: "#/components/schemas/StatusType"
        suppressed:
          type: array
          items:
            type: object
            properties:
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    Violation:
      type: object
      properties:
        field:
          type: string
        message:
          type: string
    SessionResponse:
      type: object
      properties:
        assistantId:
          type: string
          description: The id of the assistant
          example: becd153d-e1d9-4a4a-9fcf-eb8a157d3f1f
        sessionId:
          type: string
          description: The id of the session to be used when interacting with the
            assistant
          example: 9406e9e3-e2bf-4b5a-9237-2925b396f096
      description: Model for session initiation response
    Assistant:
      type: object
      properties:
        id:
          type: string
          description: Id of the assistant
          example: 9406e9e3-e2bf-4b5a-9237-2925b396f096
        handle:
          type: string
          description: Readable handle name for the assistant
          example: Assistant name
      description: Model for assistant information
    File:
      type: object
      properties:
        id:
          type: string
          description: Id of the file
          example: 9406e9e3-e2bf-4b5a-9237-2925b396f096
        name:
          type: string
          description: Readable name for the file
          example: file-name.json
        mimeType:
          type: string
          description: Mime type for the file
          example: application/json
        size:
          type: integer
          description: Size of the file
          format: int32
          example: 12345
        createdAt:
          type: string
          description: Timestamp when file was created
          format: date-time
        updatedAt:
          type: string
          description: Timestamp when file was last updated
          format: date-time
        transcription:
          type: string
          description: Transcription of file
          example: transcription
      description: Model for file information
    Metadata:
      type: object
      properties:
        embeddingModelId:
          type: string
          description: Id for the embedding model
          example: d0846e7e-a860-43d0-8bc2-d0a029c23381
        url:
          type: string
          description: Url for the embedding model
          example: http://some.url
        title:
          type: string
          description: Title of the embeddning model
          example: Title
        size:
          type: integer
          description: Size
          format: int32
      description: Model for model metadata information
    Model:
      type: object
      properties:
        id:
          type: string
          description: Id of the model
          example: 1f717b73-c676-4316-112e-cda43650d832
        name:
          type: string
          description: Name for the model
          example: gpt-4o-mini-azure
        nickname:
          type: string
          description: Nickname for the model
          example: GPT-4o mini (Azure)
        family:
          type: string
          description: Family to which the model belongs
          example: azure
        tokenLimit:
          type: integer
          description: Token limit
          format: int32
        deprecated:
          type: boolean
          description: Signal if model is deprecated or not
        nrBillionParameters:
          type: integer
          description: Nr billion parameters
          format: int32
        hfLink:
          type: string
          description: Hf link for model
          example: http://some.address
        stability:
          type: string
          description: Stability of the model
          example: stable
        hosting:
          type: string
          description: Hosting for the model
          example: swe
        openSource:
          type: boolean
          description: Signal if the model is open source or not
        description:
          type: string
          description: Description for the model
          example: "Microsoft Azure's hosted version of the compact GPT-4 Omni model,\
            \ offering faster processing with advanced capabilities."
        deploymentName:
          type: string
          description: Deployment name for the model
          example: gpt-4o-mini
        org:
          type: string
          description: Organization owning the model
          example: Microsoft
        vision:
          type: boolean
          description: Vision setting for the model
        reasoning:
          type: boolean
          description: Reasoning setting for the model
        baseUrl:
          type: string
          description: Base url for the model
          example: http://some.url
        orgEnabled:
          type: boolean
          description: Organization enabled setting for the model
        orgDefault:
          type: boolean
          description: Organization default setting for the model
        createdAt:
          type: string
          description: Timestamp when model was created
          format: date-time
        updatedAt:
          type: string
          description: Timestamp when model was last updated
          format: date-time
      description: Model for completion model information
    QuestionResponse:
      type: object
      properties:
        sessionId:
          type: string
          description: The id of the session to be used when interacting with the
            assistant
          example: 9406e9e3-e2bf-4b5a-9237-2925b396f096
        question:
          type: string
          description: The question to ask
          example: "What is the answer to the ultimate question of life, the universe\
            \ and everything?"
        answer:
          type: string
          description: Answer to asked question
          example: "42"
        files:
          type: array
          items:
            $ref: "#/components/schemas/File"
        references:
          type: array
          items:
            $ref: "#/components/schemas/Reference"
        model:
          $ref: "#/components/schemas/Model"
        tools:
          $ref: "#/components/schemas/Tools"
      description: Model for question response
    Reference:
      type: object
      properties:
        id:
          type: string
          description: Id of the reference
          example: d0846e7e-a860-43d0-8bc2-d0a029c23381
        metadata:
          $ref: "#/components/schemas/Metadata"
        groupId:
          type: string
          description: Group id to which the reference belongs
          example: 56839552-08b7-44e6-88eb-c4c524c0833b
        websiteId:
          type: string
          description: Website id for the reference
          example: 56839552-08b7-44e6-88eb-c4c524c0833b
        createdAt:
          type: string
          description: Timestamp when the reference was created
          format: date-time
        updatedAt:
          type: string
          description: Timestamp when the reference was last updated
          format: date-time
        score:
          type: integer
          description: Score for the reference
          format: int32
      description: Model for reference information
    Tools:
      type: object
      properties:
        assistants:
          type: array
          items:
            $ref: "#/components/schemas/Assistant"
      description: Model for tools information
  securitySchemes: { }
